Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.0.0.0/16

  ParentRegionSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the Parent Region
    Type: String
    Default: 10.0.1.0/24

  ParentRegionSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the second public subnet in the Parent Region
    Type: String
    Default: 10.0.2.0/24

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access into the container instances
    Type: AWS::EC2::KeyPair::KeyName
    Default: test_key

  ParentRegionGeo:
    Type: String
    Description: Enter a valid Availability Zone in the region.
    Default: us-east-1a
    AllowedValues:
      - us-east-1a
      - us-east-1b
      - us-east-1c
      - us-east-1d
      - us-east-1e
      - us-east-1f
      - us-west-2a
      - us-west-2b
      - us-west-2c
      - us-west-2d

  ParentRegion2Geo:
    Type: String
    Description: Enter a second valid Availability Zone in the region.
    Default: us-east-1b
    AllowedValues:
      - us-east-1a
      - us-east-1b
      - us-east-1c
      - us-east-1d
      - us-east-1e
      - us-east-1f
      - us-west-2a
      - us-west-2b
      - us-west-2c
      - us-west-2d

Resources:
  #Start with single VPC in user-selected region
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  #Internet gateway access for public subnet in Availability Zone
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  #Subnets for VPC
  AvailabilityZone1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref ParentRegionGeo
      CidrBlock: !Ref ParentRegionSubnetCIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Availability Zone
  AvailabilityZone2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref ParentRegion2Geo
      CidrBlock: !Ref ParentRegionSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Availability Zone 2

  #Availability Zone Routing
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Parent Route Table
  DefaultIGWRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref AvailabilityZone1
  PublicRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref AvailabilityZone2

 #Security group for Node Group & Control Plane
  ClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: wl-sg
      GroupDescription: Security group with HTTP/HTTPS access
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0

  #IAM Roles
  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-eks-cluster-role
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "eks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  #EKS Cluster
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: eks-test-Cluster
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref ClusterSecurityGroup
        SubnetIds:
          - !Ref AvailabilityZone1
          - !Ref AvailabilityZone2
      RoleArn: !GetAtt EKSClusterRole.Arn
